// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.3
// source: discoverer.proto

package prc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DiscovererState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DiscovererState) Reset() {
	*x = DiscovererState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discoverer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscovererState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscovererState) ProtoMessage() {}

func (x *DiscovererState) ProtoReflect() protoreflect.Message {
	mi := &file_discoverer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscovererState.ProtoReflect.Descriptor instead.
func (*DiscovererState) Descriptor() ([]byte, []int) {
	return file_discoverer_proto_rawDescGZIP(), []int{0}
}

type DiscovererMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RcPhysicalAddress string            `protobuf:"bytes,1,opt,name=rc_physical_address,json=rcPhysicalAddress,proto3" json:"rc_physical_address,omitempty"`                                                                           // 资源控制器物理地址（通常为内网地址）
	LaunchAt          int64             `protobuf:"varint,2,opt,name=launch_at,json=launchAt,proto3" json:"launch_at,omitempty"`                                                                                                       // 启动时间（毫秒级）
	UserMetadata      map[string]string `protobuf:"bytes,1000,rep,name=user_metadata,json=userMetadata,proto3" json:"user_metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 用户自定义元数据
}

func (x *DiscovererMetadata) Reset() {
	*x = DiscovererMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discoverer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscovererMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscovererMetadata) ProtoMessage() {}

func (x *DiscovererMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_discoverer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscovererMetadata.ProtoReflect.Descriptor instead.
func (*DiscovererMetadata) Descriptor() ([]byte, []int) {
	return file_discoverer_proto_rawDescGZIP(), []int{1}
}

func (x *DiscovererMetadata) GetRcPhysicalAddress() string {
	if x != nil {
		return x.RcPhysicalAddress
	}
	return ""
}

func (x *DiscovererMetadata) GetLaunchAt() int64 {
	if x != nil {
		return x.LaunchAt
	}
	return 0
}

func (x *DiscovererMetadata) GetUserMetadata() map[string]string {
	if x != nil {
		return x.UserMetadata
	}
	return nil
}

var File_discoverer_proto protoreflect.FileDescriptor

var file_discoverer_proto_rawDesc = []byte{
	0x0a, 0x10, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x03, 0x70, 0x72, 0x63, 0x22, 0x11, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0xf3, 0x01, 0x0a, 0x12, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x63, 0x5f, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x72, 0x63, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x5f, 0x61, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x41, 0x74, 0x12, 0x4f,
	0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0xe8, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x63, 0x2e, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a,
	0x3f, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b,
	0x65, 0x72, 0x63, 0x79, 0x6c, 0x61, 0x6e, 0x39, 0x38, 0x2f, 0x6d, 0x69, 0x6e, 0x6f, 0x74, 0x61,
	0x75, 0x72, 0x2f, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x70, 0x72, 0x63, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_discoverer_proto_rawDescOnce sync.Once
	file_discoverer_proto_rawDescData = file_discoverer_proto_rawDesc
)

func file_discoverer_proto_rawDescGZIP() []byte {
	file_discoverer_proto_rawDescOnce.Do(func() {
		file_discoverer_proto_rawDescData = protoimpl.X.CompressGZIP(file_discoverer_proto_rawDescData)
	})
	return file_discoverer_proto_rawDescData
}

var file_discoverer_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_discoverer_proto_goTypes = []interface{}{
	(*DiscovererState)(nil),    // 0: prc.DiscovererState
	(*DiscovererMetadata)(nil), // 1: prc.DiscovererMetadata
	nil,                        // 2: prc.DiscovererMetadata.UserMetadataEntry
}
var file_discoverer_proto_depIdxs = []int32{
	2, // 0: prc.DiscovererMetadata.user_metadata:type_name -> prc.DiscovererMetadata.UserMetadataEntry
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_discoverer_proto_init() }
func file_discoverer_proto_init() {
	if File_discoverer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_discoverer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscovererState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discoverer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscovererMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_discoverer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_discoverer_proto_goTypes,
		DependencyIndexes: file_discoverer_proto_depIdxs,
		MessageInfos:      file_discoverer_proto_msgTypes,
	}.Build()
	File_discoverer_proto = out.File
	file_discoverer_proto_rawDesc = nil
	file_discoverer_proto_goTypes = nil
	file_discoverer_proto_depIdxs = nil
}
