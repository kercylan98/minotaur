package generator

import (
	"github.com/kercylan98/minotaur/configuration"
	"os"
	"text/template"
)

const (
	// TEMPLATE 代码模板
	golangTemplate = `
		package main // Code generated by minotaur. DO NOT EDIT.

		import (
			"fmt"
		)

	    // 将字段的所有结构信息转换为结构体定义，基本字段名称如果是 Name 下一级字段就是 NameXXX，以此类推
	
		{{range .Expands}}
		type {{.Source.Name}} struct {
			{{range .Structure.StructFields}}
			{{.Name}} {{.Structure.Raw}}
			{{end}}
		}
		{{end}}

	`
)

type Golang struct {
	Expands []*configuration.Field
}

func (g *Golang) Generate(fields []*configuration.Field) error {
	for _, field := range fields {
		g.Expands = append(g.Expands, field.ExpandStructures()...)
	}

	text, err := template.New("golang").Parse(golangTemplate)
	if err != nil {
		return err
	}

	return text.Execute(os.Stdout, g)
}
