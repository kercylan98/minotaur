// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.3
// source: raft_status.proto

package prc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RaftFMSSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaderId    *ProcessId   `protobuf:"bytes,1,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`           // leader_id
	VotedFor    *ProcessId   `protobuf:"bytes,2,opt,name=voted_for,json=votedFor,proto3" json:"voted_for,omitempty"`           // voted_for
	CurrentTerm int64        `protobuf:"varint,3,opt,name=current_term,json=currentTerm,proto3" json:"current_term,omitempty"` // current_term
	Peers       []*ProcessId `protobuf:"bytes,4,rep,name=peers,proto3" json:"peers,omitempty"`                                 // peers
}

func (x *RaftFMSSnapshot) Reset() {
	*x = RaftFMSSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raft_status_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RaftFMSSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaftFMSSnapshot) ProtoMessage() {}

func (x *RaftFMSSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_raft_status_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaftFMSSnapshot.ProtoReflect.Descriptor instead.
func (*RaftFMSSnapshot) Descriptor() ([]byte, []int) {
	return file_raft_status_proto_rawDescGZIP(), []int{0}
}

func (x *RaftFMSSnapshot) GetLeaderId() *ProcessId {
	if x != nil {
		return x.LeaderId
	}
	return nil
}

func (x *RaftFMSSnapshot) GetVotedFor() *ProcessId {
	if x != nil {
		return x.VotedFor
	}
	return nil
}

func (x *RaftFMSSnapshot) GetCurrentTerm() int64 {
	if x != nil {
		return x.CurrentTerm
	}
	return 0
}

func (x *RaftFMSSnapshot) GetPeers() []*ProcessId {
	if x != nil {
		return x.Peers
	}
	return nil
}

type RaftFMSLogEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessIds []*ProcessId `protobuf:"bytes,1,rep,name=process_ids,json=processIds,proto3" json:"process_ids,omitempty"` // process_id
}

func (x *RaftFMSLogEntry) Reset() {
	*x = RaftFMSLogEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_raft_status_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RaftFMSLogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaftFMSLogEntry) ProtoMessage() {}

func (x *RaftFMSLogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_raft_status_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaftFMSLogEntry.ProtoReflect.Descriptor instead.
func (*RaftFMSLogEntry) Descriptor() ([]byte, []int) {
	return file_raft_status_proto_rawDescGZIP(), []int{1}
}

func (x *RaftFMSLogEntry) GetProcessIds() []*ProcessId {
	if x != nil {
		return x.ProcessIds
	}
	return nil
}

var File_raft_status_proto protoreflect.FileDescriptor

var file_raft_status_proto_rawDesc = []byte{
	0x0a, 0x11, 0x72, 0x61, 0x66, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x03, 0x70, 0x72, 0x63, 0x1a, 0x10, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb4, 0x01, 0x0a, 0x0f, 0x52,
	0x61, 0x66, 0x74, 0x46, 0x4d, 0x53, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x2b,
	0x0a, 0x09, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49,
	0x64, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x09, 0x76,
	0x6f, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x72, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x52, 0x08,
	0x76, 0x6f, 0x74, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x24, 0x0a, 0x05, 0x70,
	0x65, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x63,
	0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x52, 0x05, 0x70, 0x65, 0x65, 0x72,
	0x73, 0x22, 0x42, 0x0a, 0x0f, 0x52, 0x61, 0x66, 0x74, 0x46, 0x4d, 0x53, 0x4c, 0x6f, 0x67, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x2f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x63, 0x2e,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x49, 0x64, 0x73, 0x42, 0x3f, 0x5a, 0x3d, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x65, 0x72, 0x63, 0x79, 0x6c, 0x61, 0x6e, 0x39, 0x38, 0x2f,
	0x6d, 0x69, 0x6e, 0x6f, 0x74, 0x61, 0x75, 0x72, 0x2f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d,
	0x65, 0x6e, 0x74, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x76, 0x69, 0x76,
	0x69, 0x64, 0x2f, 0x70, 0x72, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_raft_status_proto_rawDescOnce sync.Once
	file_raft_status_proto_rawDescData = file_raft_status_proto_rawDesc
)

func file_raft_status_proto_rawDescGZIP() []byte {
	file_raft_status_proto_rawDescOnce.Do(func() {
		file_raft_status_proto_rawDescData = protoimpl.X.CompressGZIP(file_raft_status_proto_rawDescData)
	})
	return file_raft_status_proto_rawDescData
}

var file_raft_status_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_raft_status_proto_goTypes = []interface{}{
	(*RaftFMSSnapshot)(nil), // 0: prc.RaftFMSSnapshot
	(*RaftFMSLogEntry)(nil), // 1: prc.RaftFMSLogEntry
	(*ProcessId)(nil),       // 2: prc.ProcessId
}
var file_raft_status_proto_depIdxs = []int32{
	2, // 0: prc.RaftFMSSnapshot.leader_id:type_name -> prc.ProcessId
	2, // 1: prc.RaftFMSSnapshot.voted_for:type_name -> prc.ProcessId
	2, // 2: prc.RaftFMSSnapshot.peers:type_name -> prc.ProcessId
	2, // 3: prc.RaftFMSLogEntry.process_ids:type_name -> prc.ProcessId
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_raft_status_proto_init() }
func file_raft_status_proto_init() {
	if File_raft_status_proto != nil {
		return
	}
	file_process_id_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_raft_status_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RaftFMSSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_raft_status_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RaftFMSLogEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_raft_status_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_raft_status_proto_goTypes,
		DependencyIndexes: file_raft_status_proto_depIdxs,
		MessageInfos:      file_raft_status_proto_msgTypes,
	}.Build()
	File_raft_status_proto = out.File
	file_raft_status_proto_rawDesc = nil
	file_raft_status_proto_goTypes = nil
	file_raft_status_proto_depIdxs = nil
}
